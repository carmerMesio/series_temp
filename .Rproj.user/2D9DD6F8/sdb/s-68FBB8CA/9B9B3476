{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Proyecto Series Temporales\"\nauthor: \"David Cardoner & Arnau Mercader\"\ndate: \"\"\noutput: pdf_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE,message=FALSE,warning=FALSE,comment='',fig.height = 5,fig.width = 7)\n```\n\n\\bigskip\n\n\\bigskip\n\n\\bigskip\n\n\n\nEn el presente documento se pretende ilustrar y realizar un _forecast_ a partir de datos recogidos de la empresa __Dexma__, empresa dedicada a la eficiencia y gestión energética. Los datos disponibles estan anonimizados, posiblemente de un cliente del sector alimentario. El rango de estos es el año 2017 y su frecuencia es cuarto horaria (96 observaciones/día). Los datos son de alta frecuencia ( _high frequency data_ ), por lo que la metodología clásica ARIMA no es muy recomendable, ya que el número de parámetros necesarios para controlar el proceso puede llegar a ser excesivo y dar estimaciones inestables e ineficientes. Es por eso, que se implementará primero un análisis de factores (TSFA) y con estos se estimará un modelo vectorial autoregresivo (VAR). Para contrastar el modelo VAR, se comparará con una predicción ponderada de un modelo AR y una descomposición del factor de manera univariante.\n\n\n\\bigskip\n\n\\bigskip\n\n\\bigskip\n\n__Palabras clave__: Análisis de factores, _high frequency data_, modelos autoregresivos AR-VAR, variables latentes.  \n\n\n\\newpage\n\n## Metodología\n\nEl análisis factorial se utiliza como método de análisis de variaciones en la respuesta basada en variables latentes no observadas. Este método esta muy ligado al análisis de componentes principales, pero se asume un error general que de entrada no puede ser explicado por los factores. Al aplicar el modelo de factores, cada uno de ellos se puede interpretar como una serie individual. A la vez, este análisis permite caracterizar relaciones y patrones en los datos estudiando el comportamiento de estos. \n\nSea $y_t$ un vector m-dimensional de longitud $T$ y $n$ el número de factores o variables latentes ($n << T$) recogidos en el n-vector $\\phi$. La relación entre $y_t$ y los factores $\\phi$ se asume lineal y se puede caracterizar mediante la expresión: \n\n$$y_t = \\alpha_t + L \\phi_t + \\epsilon_t$$\n\nDonde $\\alpha_t$ juega el papel de _intercept_ y se puede despreciar si los datos $y_t$ estan centrados. La matriz de loadings L es de dimensión $m \\;x \\;n$ y se considera invariante en el tiempo, y el error aleatorio $\\epsilon$ se asume independiente de los factores $\\phi$. La matriz L es la que permite pasar de la estimación de los factores a la variable respuesta $y_t$.\n\nEl análisis se complementará con la utilización de variables explicativas para intentar mejorar la _performance_ del modelo. Se crearán variables binarias para: caracterizar si el día es domingo, días festivos del año 2017 en España y períodos de festividad clásicos (Semana Santa y Navidad conjuntamente). Estos datos se han obtenido de la página: https://www.calendario-365.es/dias-festivos/2017.html (última consulta 06/06) mediante _scrapping_. El Rdata festivos_2017 proporciona esta información además de la variable respuesta.\n\n\n### Validación y determinación del número de factores\n\nPara determinar el número de factores se contrastarán distintos enfoques: el Test de Bartlett, autovalores asociados a la matriz de correlaciones (dimensión $310*96$) de la serie multivariante superiores a la unidad y estadísticos como CFI y RMSEA obtenidos mediante la función _FafitStats_ de R. Se reservarán 54 observaciones para validar el poder predictivo del modelo. Como métricas para ver la calidad de estas predicciones se usará RMSE, MAPE y la mediana del APE para intentar corregir el efecto de los domingos (consumo muy inferor) y posibles inestabilidades puntuales en el consumo.\n\nDefinición de las métricas:\n\n- RMSE = $\\displaystyle \\sqrt{n^{-1}\\sum_{i=1}^{t}(y_i-\\hat{y_i})^2}$\n- MAPE = $\\displaystyle n^{-1}\\sum_{i=1}^{t}\\dfrac{|y_i-\\hat{y_i}|}{y_i}$\n- median(APE) = $\\displaystyle med{\\dfrac{|y_i-\\hat{y_i}|}{y_i}}$\n\n\n\\newpage \n\n## Análisis de los factores\n\nA continuación se muestra un gráfico de la serie a analizar así como un histograma de la distribución conjunta donde se observa bimodalidad.\n\n```{r,fig.height=4,fig.width=6}\n# load packages\nlibrary(tsfa)\nlibrary(nFactors)\nlibrary(vars)\nlibrary(readr)\nlibrary(foreach)\nlibrary(doParallel)\nlibrary(lubridate)\nlibrary(forecast)\nlibrary(knitr)\n\nsuperm<-read_delim(\"Quarter Hourly Electrical Energy_01-01-2017_31-12-2017.csv\", \n                   \";\", escape_double = FALSE, trim_ws = TRUE)\n\nload(\"tabla_festivos.RData\")\n\nparam = 310\ndif = 364-param\n\ndatos=matrix(superm$`General [kWh]`,nrow=param,ncol=96, byrow = T)\npredicc=matrix(superm$`General [kWh]`[-c(1:(param*96))],nrow=dif,ncol=96, byrow = T)\n\n##domingos y festivos\nvaldom=ifelse(weekdays(dmy(superm$Date))==\"domingo\",1,0)\ndatdom=matrix(valdom,nrow = param,ncol = 96,byrow = T)[,1]\npreddom=matrix(valdom[-c(1:(param*96))],nrow=dif,ncol=96, byrow = T)[,1]\n\n##festivos y fiestas navidad y sem santa\nfestiusdat=matrix(news$festivo,nrow = param,ncol = 96,byrow = T)[,1]\nfestiuspred=matrix(news$festivo[-c(1:(param*96))],nrow=dif,ncol=96, byrow = T)[,1]\n  \nhwfiesdat=matrix(news$holw,nrow=param,ncol=96, byrow = T)[,1]\nhwfiespred=matrix(news$holw[-c(1:(param*96))],nrow=dif,ncol=96, byrow = T)[,1]\n\n\nserie=ts(superm$`General [kWh]`,freq=96)\nplot(serie,ylab='Consumo [KWh]',xlab='Tiempo',main='Serie de consumo')\n\nhist(serie,col='steelblue',main='Histograma de la serie de consumo',xlab='Consumo [KWh]',\n     ylab='Freq')\n\n```\n\n\\newpage\n\nSeguidamente se muestra la validación basada en los _eigenvalues_. El gráfico ilustra el peso o significación de cada una de las columnas de los datos. Según este criterio se deben escoger como factores aquellos valores superiores a la unidad, en este caso, se deben seleccionar 7 factores.\n\n```{r}\nzz <- eigen(cor(datos), symmetric=TRUE)[[\"values\"]] \npar(omi=c(0.1,0.1,0.1,0.1),mar=c(4.1,4.1,0.6,0.1)) \nplot(zz, ylab=\"Value\", xlab=\"Eigenvalue Number\", pch=20:20,cex=1,type=\"o\",main=\"Eigenvalues de la serie\")\n\n```\n\n\nSegún el test de Bartlett que también utiliza como _input_ la matriz de correlaciones de los datos, el número de factores resultante debe ser 5. \n\n```{r}\noptnf=nBartlett(cor(datos),N = ncol(datos), alpha=0.05, cor=TRUE, details=TRUE, correction=TRUE)\noptnf\n```\n\nComo última propuesta se usa la función _FAfitStats_ para ver la significación de los factores en los estadísticos CFI y RMSEA. El CFI ( _comparative fit index_ ) es un pseudo-$R^2$, con rango entre 0 y 1 y el RMSEA ( _root mean square error of approximation_ ) mide la pérdida de ajuste por cada grado de libertad, la distribución de referencia se asume $\\chi^2$.\n\nUsando esta propuesta, el número máximo de factores será igual o menor a la cota Ledermann, que en este caso es 82. \n\n\n```{r}\n# Descomentar si se quiere obtener el output que proporciona el Fafit.RData.\n# numfatfit <- FAfitStats(datos, diff.=TRUE, maxit=30000)\nload(\"Fafit.RData\")\n#output\nknitr::kable(t(numfatfit$fitStats[c(5,7),1:15]))\n```\n\nAnalizando todos los indicadores se decide utilizar 5 factores. Está conclusión se hace en base a la interpretabilidad y también analizando el CFI y RMSEA que muestran un estancamiento a partir del factor 5.\n\n## Estimación de los factores\n\nPara realizar la estimación de los factores se diferenciarán los datos pero no se aplicará normalización. En los siguientes 5 gráficos se puede ver el peso de los factores en la serie. El\nfactor que más peso tiene es el primero, que podemos interpretar como el consumo durante el tiempo que el establecimiento está abierto de cara al público. El segundo, recoge picos durante la madrugada hasta primera hora de la mañana, quizás necesidades de refrigeración, y los otros tienen un carácter más residual y bastante homogéneo entre los factores 3 y 4, que tienen dos picos, uno por la mañana entre 6 y 10 y otro por la noche sobre las 22.\n\n```{r factors_plots}\n# nº of factors\nnf= 5\n##normalize TRUE o FALSE.\nfactores<-estTSF.ML(datos,nf,normalize=F,maxit=30000)\n\nhours <- 0:23\nlabels <- numeric()\nfor (i in 1:length(hours)){\n  labels <- c(labels,rep(c(hours[i],NA),c(1,3)))\n}\npar(mfrow=c(3,1))\nfor (i in 1:nf){\n  barplot(factores$loadings[,i],main=paste0('Factor ',i),xlab='',cex.names=1,names.arg=labels)\n}\n\n```\n\n\\newpage\n\n```{r}\n# guardamos los factores\nfmodel<-factors(factores) #modelo dado por los factores TSFA\n\n```\n\n## Estimación y forecast\n\nEn esta sección, con los valores de los 5 factores se estimarán 2 modelos como ya se ha comentado: VAR y predición basada en la media ponderada de AR y descomposición de la serie univariante para cada factor. Se realizarán 2 variantes, una sin las variables exógenas y otra con ellas, para ver su efecto, además de una comparativa entre ambos enfoques.\n\nPara las dos variantes se usará un modelo VAR con los 5 factores con retardo p=1, y estimando un _intercept_. Los modelos AR univariantes se estimarán mediante la función _auto.arima_, que buscará la mejor combinación con restricciones lag máximo p=7 y considerando el proceso estacionario. Para la descomposición de la serie se usará la función _ets_ considerando el error y la tendencia aditiva y no considerando estacionalidad (combinación AAN). Para validar el peso que debemos dar en el forecast a la parte AR y _ets_ se utilizará un _grid_, que ponderará de 0.1 en 0.1, los pesos de cada modelo para crear la combinación lineal que obtenga el mejor valor para los 20 días reservados como validación.\n\nPara llevar a cabo todo este proceso se ha escrito una función R, donde en cada iteración se reestima el modelo TSFA con 5 factores para actualizar así los loadings (matriz L) y factores. En el material adjunto, existen 2 animaciones que permiten ver el progreso del algoritmo en el conjunto de test, simulando un poco los outputs que dan librerías recientes como Tensorflow. En la función se guardan las predicciones para poder evaluar las métricas diarias y globales. \n\nComo punto final a destacar, se usará la función 2 veces, una sin considerar variables exógenas y otra añadiendo el código adecuado para poder usar exógenas en nuestros modelos.\n\n\\newpage\n\n### Estimación sin variables exógenas\n\nA continuación, se muestran las tablas con el valor de la métrica diaria y global generada para los datos de test.\n\n```{r function_bucle}\n{\n## function bucle\nj<-1\ndatos2 <- datos\ndatdom2<-datdom\nfest2 <- festiusdat\nnad2 <- hwfiesdat\np<-vector()\nfactorspred <- matrix(nrow = nf,ncol = nrow(predicc))\nresppred <- matrix(nrow = nrow(predicc),ncol = 96)\nresppredarima <- matrix(nrow = nrow(predicc),ncol = 96)\nfor(i in nrow(datos):363){\n\nfactores<-estTSF.ML(datos2,nf,normalize=F,maxit=30000)\nfmodel<-factors(factores)\nserief1ts <- ts(fmodel)\n##Mejor modelo con const.\nvarf1 <- VAR(serief1ts,p=1, type=\"const\")\n\n##Autoarima with also three covariables auxiliary. And ets with trend of 0.2\nprediccarima <- vector()\nfor(t in 1:ncol(serief1ts)){\nvararima <- auto.arima(serief1ts[,t],max.p = 7,max.q = 0,stationary = TRUE)\nvarets <- as.vector(forecast(ets(serief1ts[,t],model='AAN'),h = 1)[2]$mean)\nab<-predict(vararima)\n#prediccarima <- c(prediccarima,ab$pred)\nprediccarima <- c(prediccarima,c(.3*ab$pred+.7*varets))\n}\n\nresppredarima[j,]<-t(factores$loadings%*%prediccarima)\n\n\naa<-predict(varf1,n.ahead = 1)\n\nf1<-aa$fcst$Factor.1[,1]\nf2<-aa$fcst$Factor.2[,1]\nf3<-aa$fcst$Factor.3[,1]\nf4<-aa$fcst$Factor.4[,1]\nf5<-aa$fcst$Factor.5[,1]\n\n\nfac <- t(matrix(c(f1,f2,f3,f4,f5),nrow=length(f1),ncol=5))\nfactorspred[,j]<-fac\np<-c(p,t(factores$loadings%*%factorspred[,j]))\nresppred[j,]<-t(factores$loadings%*%factorspred[,j])\ndatos2 <- rbind(datos2,predicc[j,])\ndatdom2 <- c(datdom2,preddom[j])\nfest2 <- c(fest2,festiuspred[j])\nnad2 <- c(nad2,hwfiespred[j])\n\n# par(mfrow=c(2,2))\n# ##plot individual\n# plot(ts(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),freq=96),type=\"l\",ylab='',\n#      xlab=paste0('Time | RMSE=',round(Metrics::rmse(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),\n#                                                         as.vector(t(resppred[j,]))),2)),\n#      lty=2,col=\"blue\",\n#      ylim=c(0,max(c(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),as.vector(t(resppred[j,]))))))\n# title(\"Individual VARX Model\")\n# lines(ts(as.vector(t(resppred[j,])),freq=96))\n# \n# ##plot colectivo\n# plot(ts(as.vector(t(datos2[-c(1:nrow(datos)),])),freq=96),type=\"l\",lty=2,col=\"blue\",ylab='')\n# title(\"VARX Collective Model\")\n# lines(ts(as.vector(t(resppred)),freq=96))\n# \n# ##plot individual arima\n# plot(ts(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),freq=96),type=\"l\",ylab='',\n#      xlab=paste0('Time | RMSE=',round(Metrics::rmse(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),\n#                                                     as.vector(t(resppredarima[j,]))),2)),\n#      lty=2,col=\"red\",ylim=c(0,max(c(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),as.vector(t(resppredarima[j,]))))))\n# title(\"Individual Autoarima Model\")\n# lines(ts(as.vector(t(resppredarima[j,])),freq=96))\n# \n# ##plot colectivo arima\n# plot(ts(as.vector(t(datos2[-c(1:nrow(datos)),])),freq=96),type=\"l\",lty=2,col=\"red\",ylab='')\n# title(\"Autoarima Model\")\n# lines(ts(as.vector(t(resppredarima)),freq=96))\nj<-j+1\n\n}\n}\n```\n\n\n```{r}\n#taula\nrmse_v <- numeric(54)\nmape_v <- numeric(54)\nmedian_ape_v <- numeric(54)\nrmse_vv <- numeric(54)\nmape_vv <- numeric(54)\nmedian_ape_vv <- numeric(54)\n\nfor (i in 1:dim(resppred)[1]) {\n\n  rmse_v[i] <- Metrics::rmse(predicc[i,],resppred[i,])\n  mape_v[i] <- Metrics::mape(predicc[i,],resppred[i,])\n  median_ape_v[i] <- median(Metrics::ape(predicc[i,],resppred[i,]))\n  \n  rmse_vv[i] <- Metrics::rmse(predicc[i,],resppredarima[i,])\n  mape_vv[i] <- Metrics::mape(predicc[i,],resppredarima[i,])\n  median_ape_vv[i] <- median(Metrics::ape(predicc[i,],resppredarima[i,]))\n  \n  \n}\n\noptions(digits=4)\n\ntaula1 <- data.frame(VAR_rmse = rmse_v, Ens_rmse = rmse_vv,\n                     VAR_mape=mape_v, Ens_mape=mape_vv,\n                     VAR_median_ape = median_ape_v, Ens_median_ape = median_ape_vv)\n\n\nkable(taula1,caption = 'Métricas diarias',row.names = TRUE)\n\ntaula1g <- data.frame(VAR_rmse = Metrics::rmse(as.vector(t(predicc)),as.vector(t(resppred))),                         Ens_rmse = Metrics::rmse(as.vector(t(predicc)),as.vector(t(resppredarima))),\n                     VAR_mape=Metrics::mape(as.vector(t(predicc)),as.vector(t(resppred))), Ens_mape=Metrics::mape(as.vector(t(predicc)),as.vector(t(resppredarima))),\n                     VAR_median_ape = median(Metrics::ape(as.vector(t(predicc)),as.vector(t(resppred)))), Ens_median_ape = median(Metrics::ape(as.vector(t(predicc)),as.vector(t(resppredarima)))))\n\nkable(taula1g,caption = 'Métricas globales')\n\n\n```\n\n\\newpage\n\n### Estimación con variables exógenas\n\nTras realizar los modelos sin variables exógenas se adjuntan seguidamente las tablas obtenidas con el mismo formato que antes pero añadiendo variables exógenas en el modelo.\n\n```{r}\n{\n  ## function bucle\n  j<-1\n  datos2 <- datos\n  datdom2<-datdom\n  fest2 <- festiusdat\n  nad2 <- hwfiesdat\n  p<-vector()\n  factorspred <- matrix(nrow = nf,ncol = nrow(predicc))\n  resppred <- matrix(nrow = nrow(predicc),ncol = 96)\n  resppredarima <- matrix(nrow = nrow(predicc),ncol = 96)\n  for(i in nrow(datos):363){\n    \n    factores<-estTSF.ML(datos2,nf,normalize=F,maxit=30000)\n    fmodel<-factors(factores)\n    serief1ts <- ts(fmodel)\n    ##Mejor modelo con const.\n    varf1 <- VAR(serief1ts,p=1, type=\"const\",exogen = as.matrix(cbind(dat=datdom2,fest=fest2,nad=nad2)))\n    \n    ##Autoarima with also three covariables auxiliary. And ets with trend of 0.2\n    prediccarima <- vector()\n    for(t in 1:ncol(serief1ts)){\n      vararima <- auto.arima(serief1ts[,t],max.p = 7,max.q = 0,stationary = TRUE,xreg = cbind(dat=datdom2,fest=fest2,nad=nad2))\n      varets <- as.vector(forecast(ets(serief1ts[,t],model='AAN'),h = 1)[2]$mean)\n      ab<-predict(vararima,newxreg = cbind(preddom[j],festiuspred[j],hwfiespred[j]))\n      #prediccarima <- c(prediccarima,ab$pred)\n      prediccarima <- c(prediccarima,c(1*ab$pred+0*varets))\n    }\n    \n    resppredarima[j,]<-t(factores$loadings%*%prediccarima)\n    \n    \n    aa<-predict(varf1,dumvar = as.matrix(cbind(preddom[j],festiuspred[j],hwfiespred[j])),n.ahead = 1)\n    \n    f1<-aa$fcst$Factor.1[,1]\n    f2<-aa$fcst$Factor.2[,1]\n    f3<-aa$fcst$Factor.3[,1]\n    f4<-aa$fcst$Factor.4[,1]\n    f5<-aa$fcst$Factor.5[,1]\n    \n    \n    fac <- t(matrix(c(f1,f2,f3,f4,f5),nrow=length(f1),ncol=5))\n    factorspred[,j]<-fac\n    p<-c(p,t(factores$loadings%*%factorspred[,j]))\n    resppred[j,]<-t(factores$loadings%*%factorspred[,j])\n    # print(j)\n    datos2 <- rbind(datos2,predicc[j,])\n    datdom2 <- c(datdom2,preddom[j])\n    fest2 <- c(fest2,festiuspred[j])\n    nad2 <- c(nad2,hwfiespred[j])\n    \n    # par(mfrow=c(2,2))\n    # ##plot individual\n    # plot(ts(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),freq=96),type=\"l\",ylab='',\n    #      xlab=paste0('Time | RMSE=',round(Metrics::rmse(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),\n    #                                                     as.vector(t(resppred[j,]))),2)),\n    #      lty=2,col=\"blue\",\n    #      ylim=c(0,max(c(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),as.vector(t(resppred[j,]))))))\n    # title(\"Individual VARX Model\")\n    # lines(ts(as.vector(t(resppred[j,])),freq=96))\n    # \n    # ##plot colectivo\n    # plot(ts(as.vector(t(datos2[-c(1:nrow(datos)),])),freq=96),type=\"l\",lty=2,col=\"blue\",ylab='')\n    # title(\"VARX Collective Model\")\n    # lines(ts(as.vector(t(resppred)),freq=96))\n    # \n    # ##plot individual arima\n    # plot(ts(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),freq=96),type=\"l\",ylab='',\n    #      lty=2,col=\"red\",ylim=c(0,max(c(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),as.vector(t(resppredarima[j,]))))))\n    # title(\"Individual Autoarima Model\")\n    # lines(ts(as.vector(t(resppredarima[j,])),freq=96))\n    # \n    # ##plot colectivo arima\n    # plot(ts(as.vector(t(datos2[-c(1:nrow(datos)),])),freq=96),type=\"l\",lty=2,col=\"red\",ylab='')\n    # title(\"Autoarima Model\")\n    # lines(ts(as.vector(t(resppredarima)),freq=96))\n    j<-j+1\n    \n  }\n}\n\n```\n\n\n\n```{r}\n#taula amb exogenes\nrmse_v <- numeric(54)\nmape_v <- numeric(54)\nmedian_ape_v <- numeric(54)\nrmse_vv <- numeric(54)\nmape_vv <- numeric(54)\nmedian_ape_vv <- numeric(54)\n\nfor (i in 1:dim(resppred)[1]) {\n\n  rmse_v[i] <- Metrics::rmse(predicc[i,],resppred[i,])\n  mape_v[i] <- Metrics::mape(predicc[i,],resppred[i,])\n  median_ape_v[i] <- median(Metrics::ape(predicc[i,],resppred[i,]))\n  \n  rmse_vv[i] <- Metrics::rmse(predicc[i,],resppredarima[i,])\n  mape_vv[i] <- Metrics::mape(predicc[i,],resppredarima[i,])\n  median_ape_vv[i] <- median(Metrics::ape(predicc[i,],resppredarima[i,]))\n  \n  \n}\n\noptions(digits=3)\n\ntaula1 <- data.frame(VAR_rmse = rmse_v, Ens_rmse = rmse_vv,\n                     VAR_mape=mape_v, Ens_mape=mape_vv,\n                     VAR_median_ape = median_ape_v, Ens_median_ape = median_ape_vv)\n\n\nkable(taula1,caption = 'Métricas diarias',row.names = TRUE)\n\ntaula1g <- data.frame(VAR_rmse = Metrics::rmse(as.vector(t(predicc)),as.vector(t(resppred))),                         Ens_rmse = Metrics::rmse(as.vector(t(predicc)),as.vector(t(resppredarima))),\n                     VAR_mape=Metrics::mape(as.vector(t(predicc)),as.vector(t(resppred))), Ens_mape=Metrics::mape(as.vector(t(predicc)),as.vector(t(resppredarima))),\n                     VAR_median_ape = median(Metrics::ape(as.vector(t(predicc)),as.vector(t(resppred)))), Ens_median_ape = median(Metrics::ape(as.vector(t(predicc)),as.vector(t(resppredarima)))))\n\nkable(taula1g,caption = 'Métricas globales')\n\n\n```\n\n\\newpage \n\n### Conclusiones\n\n- Añadiendo variables exógenas al modelo la calidad predictiva mejora moderadamente, debido, por ejemplo al factor domingo, donde el establecimiento esta cerrado y solo se observa un consumo constante debido a la refrigeración del local (por su sector de actividad).\n\n- El enfoque _Ensemble_ sin considerar variables auxiliares da más peso a la predicción _ets_. Sin embargo, al usarlas la predicción solo da peso a los AR univariantes ya que proporcionan más información.\n\n- El hecho de utilizar un modelo VAR con un retardo o modelos AR univariantes mezclados con descomposición dan en los dos escenarios analizados resultados similares. \n\n- Podríamos haber enfocado esta predicción como un claro de ejemplo de aplicación de modelos de Machine learning, como XGboost, Random Forest o Redes Neuronales. La idea de reducir la dimensionalidad de los datos mediante factores es rica por su simplez y efectividad, a la vista de los resultados obtenidos. Quizás la parte más compleja es determinar que factores usar y como predecirlos con tal de obtener buenas predicciones. Es en esta última parte donde quizás es bueno combinar una herramienta más clásica o estadística con un enfoque más computacional y moderno como podría ser algun algoritmo de machine learning mencionado arriba.\n\n- Aprender esta metodología ha sido enriquecedor para nosotros y nos ha permitido ver una idea _parecida_ al PCA, el cual si habíamos trabajado. Los factores latentes o subyacentes a la serie permiten añadiendo otras variables exógenas como por ejemplo la variable que permite controlar los domingos, generar una predicción bastante ajustada de la serie.\n\n- El hecho de realizar el forecast para los días de navidad genera un handicap adicional provocado básicamente por el aumento de consumo de los hogares. Por ese motivo, se ha añadido la variable festividad que intentará recoger este aumento. Este factor considera como festividades los días de Semana Santa y el periodo de Navidad por igual.\n\n- Como aspectos a mejorar, para seleccionar el peso de la combinación lineal se podrían haber usado técnicas más complejas como k-fold por bloques de tiempo o un rango más amplio de días. La utilización del método _ets_ ha sido añadido para poder discutir un método tratado en clase.\n",
    "created" : 1528204959786.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1234503688",
    "id" : "9B9B3476",
    "lastKnownWriteTime" : 1528301552,
    "last_content_update" : 1528405404891,
    "path" : "C:/Users/David/Desktop/forec_super_Dexma/article_output.Rmd",
    "project_path" : "article_output.Rmd",
    "properties" : {
        "last_setup_crc32" : "A7AA5F97fa5fe0c6",
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}