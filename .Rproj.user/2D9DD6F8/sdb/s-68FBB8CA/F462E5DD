{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Prediction of general consumption\"\noutput: html_document\nruntime: shiny\n---\n\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE,message=FALSE,warning=FALSE,comment='')\n```\n\n```{r}\nlibrary(tsfa)\nlibrary(nFactors)\nlibrary(vars)\nlibrary(lubridate)\nload('tabla_festivos.RData')\n```\n\n\n## Idea of app\n\nThe next application show the performance of the forecast algorithm studied. You can \n\n\n```{r}\n# read data\n# load(...)\n\n\n inputPanel(\n  sliderInput(\"Size\", label = \"Days to predict\", min=1,max=60,value=30),\n  actionButton(\"Plot\", \"Try prediction\")\n              )\n\n# Doesn't work:\n\n  renderPlot({\n    input$Plot\n\n    \n    # Use isolate() to avoid dependency on input$n\n\n    isolate({\n     \n      {\n  ## function bucle\n  j<-1\n  \n  #dif = input$Size\n  dif = 30\n  param = 364 - dif\n  datos=matrix(news$`General [kWh]`,nrow=param,ncol=96, byrow = T)\n  predicc=matrix(news$`General [kWh]`[-c(1:(param*96))],nrow=dif,ncol=96, byrow = T)\n  \n  optnf=nBartlett(cor(datos),N = ncol(datos), alpha=0.05, cor=TRUE, details=TRUE, correction=TRUE)\n  nf=optnf$nFactors[1]\n  \n  \n  ##domingos y festivos\n  valdom=ifelse(weekdays((news$Date))==\"domingo\",1,0)\n  datdom=matrix(valdom,nrow = param,ncol = 96,byrow = T)[,1]\n  preddom=matrix(valdom[-c(1:(param*96))],nrow=dif,ncol=96, byrow = T)[,1]\n  \n  ##festivos y fiestas navidad y sem santa\n  festiusdat=matrix(news$festivo,nrow = param,ncol = 96,byrow = T)[,1]\n  festiuspred=matrix(news$festivo[-c(1:(param*96))],nrow=dif,ncol=96, byrow = T)[,1]\n  \n  hwfiesdat=matrix(news$holw,nrow=param,ncol=96, byrow = T)[,1]\n  hwfiespred=matrix(news$holw[-c(1:(param*96))],nrow=dif,ncol=96, byrow = T)[,1]\n  \n  datos2 <- datos\n  datdom2<-datdom\n  fest2 <- festiusdat\n  nad2 <- hwfiesdat\n  p<-vector()\n  factorspred <- matrix(nrow = nf,ncol = nrow(predicc))\n  resppred <- matrix(nrow = nrow(predicc),ncol = 96)\n  for(i in nrow(datos):363){\n    \n    factores<-estTSF.ML(datos2,nf,normalize=F,maxit=30000)\n    fmodel<-factors(factores)\n    serief1ts <- ts(fmodel)\n    ##Mejor modelo con const.\n    varf1 <- VAR(serief1ts,p=10, type=\"const\",exogen = as.matrix(cbind(dat=datdom2,fest=fest2,nad=nad2)))\n    \n    aa<-predict(varf1,dumvar = as.matrix(cbind(preddom[j],festiuspred[j],hwfiespred[j])),n.ahead = 1)\n    \n    f1<-aa$fcst$Factor.1[,1]\n    f2<-aa$fcst$Factor.2[,1]\n    f3<-aa$fcst$Factor.3[,1]\n    f4<-aa$fcst$Factor.4[,1]\n    f5<-aa$fcst$Factor.5[,1]\n    \n    fac <- t(matrix(c(f1,f2,f3,f4,f5),nrow=length(f1),ncol=5))\n    factorspred[,j]<-fac\n    p<-c(p,t(factores$loadings%*%factorspred[,j]))\n    resppred[j,]<-t(factores$loadings%*%factorspred[,j])\n    #print(j)\n    datos2 <- rbind(datos2,predicc[j,])\n    datdom2 <- c(datdom2,preddom[j])\n    fest2 <- c(fest2,festiuspred[j])\n    nad2 <- c(nad2,hwfiespred[j])\n    par(mfrow=c(2,1))\n    ##plot individual\n    plot(ts(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),freq=96),type=\"l\",\n         lty=2,col=\"blue\",ylim=c(0,max(c(as.vector(t(datos2[-c(1:(nrow(datos2)-1)),])),as.vector(t(resppred[j,]))))))\n    lines(ts(as.vector(t(resppred[j,])),freq=96))\n    \n    ##plot colectivo\n    plot(ts(as.vector(t(datos2[-c(1:nrow(datos)),])),freq=96),type=\"l\",lty=2,col=\"blue\")\n    lines(ts(as.vector(t(resppred)),freq=96))\n    \n    j<-j+1\n    \n  }\n}\n\n\n    })\n\n\n})\n```",
    "created" : 1527103766425.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2915451275",
    "id" : "F462E5DD",
    "lastKnownWriteTime" : 1527111484,
    "last_content_update" : 1527149166673,
    "path" : "C:/Users/David/Desktop/forec_super_Dexma/shiny_output_graph.Rmd",
    "project_path" : "shiny_output_graph.Rmd",
    "properties" : {
        "last_setup_crc32" : ""
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}